package org.keycloak.examples.authenticator;

import org.keycloak.Config;
import org.keycloak.authentication.Authenticator;
import org.keycloak.authentication.AuthenticatorFactory;
import org.keycloak.authentication.ConfigurableAuthenticatorFactory;
import org.keycloak.models.AuthenticationExecutionModel;
import org.keycloak.models.KeycloakSession;
import org.keycloak.models.KeycloakSessionFactory;
import org.keycloak.provider.ProviderConfigProperty;

import java.util.ArrayList;
import java.util.List;

public class CustomOTPProviderFactory implements AuthenticatorFactory, ConfigurableAuthenticatorFactory {

    public static final String PROVIDER_ID = "custom-otp-authenticator";
    private static final CustomOTPProvider SINGLETON = new CustomOTPProvider();

    @Override public String getId() {
        return PROVIDER_ID;
    }

    @Override public Authenticator create(KeycloakSession keycloakSession) {
        return SINGLETON;
    }

    private static AuthenticationExecutionModel.Requirement[] REQUIREMENT_CHOICES = {
            AuthenticationExecutionModel.Requirement.REQUIRED,
            AuthenticationExecutionModel.Requirement.ALTERNATIVE,
            AuthenticationExecutionModel.Requirement.DISABLED
    };
    @Override
    public AuthenticationExecutionModel.Requirement[] getRequirementChoices() {
        return REQUIREMENT_CHOICES;
    }

    @Override public boolean isUserSetupAllowed() {
        return false;
    }

    @Override public boolean isConfigurable() {
        return true;
    }

    @Override
    public List<ProviderConfigProperty> getConfigProperties() {
        return configProperties;
    }

    private static final List<ProviderConfigProperty> configProperties = new ArrayList<ProviderConfigProperty>();

    static {
        ProviderConfigProperty property;
        property = new ProviderConfigProperty();
        property.setName("otp.endpoint");
        property.setLabel("End point of the otp to test");
        property.setType(ProviderConfigProperty.STRING_TYPE);
        property.setHelpText("End point of the otp");
        configProperties.add(property);

    }


    @Override public String getDisplayType() {
        return "OTP QA";
    }

    @Override public String getHelpText() {
        return "OTP generated by QA token generator.";
    }



    @Override public String getReferenceCategory() {
        return "OTP QA";
    }


    @Override public void init(Config.Scope scope) {

    }

    @Override public void postInit(KeycloakSessionFactory keycloakSessionFactory) {

    }

    @Override public void close() {

    }


}
